# nostr relay prerequisites server
Prerequisite: Run local nostr relay in separate terminal window:
Directory: ~/Code/nostr-rs-relay
Command: RUST_LOG=info ./target/release/nostr-rs-relay

# server development debug
Development server command: btdw
Note: Requires local nostr relay to be running first

# rust testing coverage tarpaulin tools
Rust Code Coverage Commands:

1. Install cargo-tarpaulin:
```bash
cargo install cargo-tarpaulin
```

2. Run coverage analysis (from src-tauri directory):
```bash
cd src-tauri && cargo tarpaulin
```

Note: cargo-tarpaulin provides code coverage analysis for Rust projects. The tool:
- Generates line-by-line coverage data
- Shows percentage of code covered by tests
- Lists uncovered lines for each source file
- Requires running from the directory containing Cargo.toml

# rust testing coverage tarpaulin configuration
Additional cargo-tarpaulin options:

1. Run with specific test targets:
```bash
cargo tarpaulin --test integration_test
```

2. Run with specific features:
```bash
cargo tarpaulin --features feature_name
```

3. Generate reports in different formats:
```bash
# HTML report
cargo tarpaulin --out Html

# XML report (for CI tools)
cargo tarpaulin --out Xml

# JSON report
cargo tarpaulin --out Json
```

4. Ignore specific files or directories:
```bash
cargo tarpaulin --exclude-files "tests/*"
```

5. Set coverage threshold:
```bash
cargo tarpaulin --coverage-threshold 80
```

These commands can be used to customize the coverage analysis based on specific needs.

