name: "Build"

on:
  workflow_call: {}  # Allow this workflow to be called by other workflows
  pull_request:
  push:

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          # Android builds with correct target names
          - platform: "ubuntu-22.04"
            android: true
            android_target: "aarch64"
            abi: "arm64-v8a"
          - platform: "ubuntu-22.04"
            android: true
            android_target: "armv7"
            abi: "armeabi-v7a"
          - platform: "ubuntu-22.04"
            android: true
            android_target: "x86_64"
            abi: "x86_64"
          - platform: "ubuntu-22.04"
            android: true
            android_target: "universal"
            abi: "universal"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        if: matrix.android
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' && !matrix.android
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Android SDK
        if: matrix.android
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        if: matrix.android
        run: |
          sdkmanager --install "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.39

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Add Rust Android targets
        if: matrix.android
        run: |
          rustup target add aarch64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add x86_64-linux-android
          rustup target add i686-linux-android

      - name: Install frontend dependencies
        run: bun install

      - name: Import GPG key
        if: matrix.platform == 'ubuntu-22.04' && !matrix.android
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Setup Android signing
        if: matrix.android
        run: |
          cd src-tauri/gen/android
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties

      # Split the build step into two different actions based on the target
      - name: Build Desktop App
        if: ${{ !matrix.android }}
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGN: ${{ matrix.platform == 'ubuntu-22.04' }}
          SIGN_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          APPIMAGETOOL_SIGN_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          APPIMAGETOOL_FORCE_SIGN: 0
        with:
          args: ${{ matrix.args }}

      - name: Build Android App
        if: matrix.android
        run: |
          bun tauri android build --target ${{ matrix.android_target }}

      - name: List Android build outputs
        if: matrix.android
        run: |
          find src-tauri/gen/android/app/build/outputs/apk/*/release/*.apk -type f
          find src-tauri/gen/android/app/build/outputs/bundle/universalRelease/*.aab -type f
      
      - name: Upload Android artifacts
        if: matrix.android
        uses: actions/upload-artifact@v3
        with:
          name: android-artifacts-${{ matrix.abi }}
          path: |
            src-tauri/gen/android/app/build/outputs/apk/arm/release/*.apk
            src-tauri/gen/android/app/build/outputs/apk/arm64/release/*.apk
            src-tauri/gen/android/app/build/outputs/apk/x86_64/release/*.apk
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/*.aab
